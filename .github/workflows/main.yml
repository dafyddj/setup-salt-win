---
name: Main
on:
  push:
  pull_request:
  schedule:
    - cron: 14 15 * * *

jobs:
  should-run:
    name: Should run
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      should-run: ${{ steps.action.outputs.should-run }}
    steps:
      - id: action
        uses: techneg-it/should-workflow-run@eff19348eb884f57e05bc6f05ae48ece3af14714 # v1.0.1
  pre-commit:
    name: Run `pre-commit`
    needs: should-run
    if: fromJSON(needs.should-run.outputs.should-run)
    runs-on: ubuntu-latest
    env:
      # renovate: datasource=custom.python-versions depName=actions/python-versions versioning=pep440
      PYTHON_VERSION: 3.13.5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
  gsv:
    name: Get Salt versions
    needs: should-run
    if: fromJSON(needs.should-run.outputs.should-run)
    runs-on: ubuntu-latest
    outputs:
      salt-versions-els: ${{ steps.get-salt-versions.outputs.salt-versions-els }}
      salt-versions: ${{ steps.get-salt-versions.outputs.salt-versions }}
    steps:
      - id: get-salt-versions
        uses: dafyddj/get-salt-versions@847b788138982a01def107014dd395b46b3ef2c5 # v3.3.1
  test:
    name: Test this action
    needs: gsv
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        salt-version:
          - ${{ fromJSON(needs.gsv.outputs.salt-versions-els) }}
          - ${{ fromJSON(needs.gsv.outputs.salt-versions) }}
          # Skip RC testing for now- 3007.0rc1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run this action
        uses: ./
        with:
          salt-version: ${{ matrix.salt-version }}
          custom-config: |
            test_key1: test_value1
            test_key2: test_value2
      - name: Verify Salt version installed
        env:
          SALT_VER_EXPECTED: ${{ matrix.salt-version }}
        run: |
          $SALT_VER_INSTALLED = (-split $(salt-call --version))[1]
          if ($SALT_VER_INSTALLED -ne $env:SALT_VER_EXPECTED) {
              exit 1
          }
      - name: Verify custom config
        run: |
          foreach ($i in 1..2) {
              $value = salt-call config.get "test_key$i" --out newline_values_only
              if ($value -ne "test_value$i") {
                  exit 1
              }
          }
  results:
    name: Collect results
    permissions:
      checks: read
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: poseidon/wait-for-status-checks@899c768d191b56eef585c18f8558da19e1f3e707 # v0.6.0
        with:
          ignore: Collect results
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run `semantic-release`
        uses: codfish/semantic-release-action@b621d34fabe0940f031e89b6ebfea28322892a10 # v3.5.0
        id: sem-rel
        with:
          plugins: |
            [ "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github"
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update branch for major version
        if: steps.sem-rel.outputs.new-release-published == 'true'
        run: git push
             https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
             HEAD:refs/heads/v${{steps.sem-rel.outputs.release-major}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Healthchecks.io
        if: github.ref == 'refs/heads/main'
        run: curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/${HC_UUID}
        env:
          HC_UUID: ${{ secrets.HC_UUID }}
